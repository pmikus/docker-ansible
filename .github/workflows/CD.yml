---
name: "Container CD"

"on":
    release:
      types:
        - "published"

jobs:
  # Push image to GitHub Packages.
  release:
    runs-on: "ubuntu-latest"
    permissions:
      packages: "write"
      contents: "read"
    strategy:
      max-parallel: 3
      matrix:
        distro:
          - "ubuntu-22.04"
          - "ubuntu-23.04"
          - "debian-12"
    steps:
      - name: "Check out the codebase."
        uses: "actions/checkout@v3"

      - name: "Cache Docker layers"
        uses: "actions/cache@v3"
        with:
          path: "/tmp/.buildx-cache"
          key: "${{ runner.os }}-buildx-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: "Login to DockerHub"
        uses: "docker/login-action@v1"
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v2"

      - name: "Extract metadata (tags, labels) for Docker"
        id: "meta"
        uses: "docker/metadata-action@v4"
        with:
          images: "${{ secrets.DOCKERHUB_USERNAME }}/docker-${{ matrix.distro }}-ansible"

      - name: "Build and push Docker image"
        id: "docker_build"
        uses: "docker/build-push-action@v4"
        with:
          context: "${{ matrix.distro }}/."
          file: "${{ matrix.distro }}/Dockerfile"
          builder: "${{ steps.buildx.outputs.name }}"
          push: true
          tags: "${{ secrets.DOCKERHUB_USERNAME }}/docker-${{ matrix.distro }}-ansible:latest"
          labels: "${{ secrets.DOCKERHUB_USERNAME }}/docker-${{ matrix.distro }}-ansible:latest"
          cache-from: "type=local,src=/tmp/.buildx-cache"
          cache-to: "type=local,dest=/tmp/.buildx-cache"

      - name: "Image digest"
        run: "echo ${{ steps.docker_build.outputs.digest }}"
